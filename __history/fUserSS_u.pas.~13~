unit fUserSS_u;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, Menus, jpeg,fMainUserForm_u, StdCtrls,DMListings,DMSuburbs,DMAgencies;

type
  TfrmUserSS = class(TForm)
    Panel1: TPanel;
    Image1: TImage;
    MainMenu1: TMainMenu;
    Back1: TMenuItem;
    Help1: TMenuItem;
    Panel2: TPanel;
    Memo1: TMemo;
    Image2: TImage;
    Image3: TImage;
    Button1: TButton;
    edtPrice: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    edtBath: TEdit;
    edtArea: TEdit;
    edtBed: TEdit;
    edtPark: TEdit;
    procedure Back1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmUserSS: TfrmUserSS;
  found:boolean;
  count:integer;
 LListingId:Tstringlist;
  LSuburb:Tstringlist;
  LBedNum:Tstringlist;
  LBathNum:Tstringlist;
  LParkNum:Tstringlist;
  LPrice:Tstringlist;
  LArea:Tstringlist;
  LAgencyName:Tstringlist;
  LWebsite:Tstringlist;
    LContactNumber:Tstringlist;
  LEmailAddress:Tstringlist;
implementation

uses DMUsers;

{$R *.dfm}

procedure TfrmUserSS.Back1Click(Sender: TObject);
begin
 MainUserForm.show;
 frmUserSS.Close;
end;

procedure TfrmUserSS.Button1Click(Sender: TObject);
begin
if count<>0 then
begin
count:=Count-1;

end
else
begin
 Button1.Caption:='No more found';
end;

end;

procedure TfrmUserSS.FormShow(Sender: TObject);
var
myfile:textfile;
sline:string;
sPool,sPF:string;
sSuburb,sBedNum,sBathNum,sType,sParkNum:string;
iMINP,iMaxP,iMINA,iMaxA,iType:integer;
sMINP,sMaxP,sMINA,sMaxA:string;
sPrice,sArea:string;
cp,i:integer;
IsPool,IsPF:boolean;
sDSuburb,sDBedNum,sDBathNum,sDType,sDParkNum,sAgency,sListingId:string;
iDArea,iDprice,iDType:integer;
IsDPool,IsDPF:boolean;
begin
//propertylist:=Tstringlist.Create;
{ propertylist.Add(dmtbllistings.tblListings['listingid']);}
 { for i := 0 to propertylist.Count-1 do
   begin
 Memo1.Lines.add( propertylist[i]);
  end;   }
LListingId:=Tstringlist.Create;
  LSuburb:=Tstringlist.Create;
  LBedNum:=Tstringlist.Create;
  LBathNum:=Tstringlist.Create;
  LParkNum:=Tstringlist.Create;
  LPrice:=Tstringlist.Create;
  LArea:=Tstringlist.Create;
  LAgencyName:=Tstringlist.Create;
  LWebsite:=Tstringlist.Create;
    LContactNumber:=Tstringlist.Create;
  LEmailAddress:=Tstringlist.Create;

count:=0;
found:=false;
assignfile(myfile,'CurrentSearch.txt');
reset(myfile);
readln(myfile,sline);
closefile(myfile);

cp:=pos('/',sline);
sType:=copy(sline,1,cp-1);
delete(sline,1,cp);
if sType='House' then
iType:=1
else
iType:=2;

cp:=pos('/',sline);
sSuburb:=copy(sline,1,cp-1);
delete(sline,1,cp);

cp:=pos('/',sline);
sBedNum:=copy(sline,1,cp-1);
delete(sline,1,cp);


cp:=pos('/',sline);
sBathNum:=copy(sline,1,cp-1);
delete(sline,1,cp);


cp:=pos('/',sline);
sParkNum:=copy(sline,1,cp-1);
delete(sline,1,cp);


cp:=pos('/',sline);
sPool:=copy(sline,1,cp-1);
delete(sline,1,cp);


cp:=pos('/',sline);
sPF:=copy(sline,1,cp-1);
delete(sline,1,cp);

cp:=pos('/',sline);
sPrice:=copy(sline,1,cp-1);
delete(sline,1,cp);

sArea:=sline;

if sPF='True' then
IsPF:=true
else
IsPF:=false;
if sPool='True' then
IsPool:=true
else
IsPool:=false;

cp:=pos('-',sPrice);
sMINP:=copy(sPrice,1,cp-1);
iMINP:=strtoint(sMINP);
sMaxP:=copy(sPrice,cp+1,length(sPrice));
iMaxP:=strtoint(sMaxP);

cp:=pos('-',sArea);
sMINA:=copy(sArea,1,cp-1);
iMINA:=strtoint(sMINA);
sMaxA:=copy(sArea,cp+1,length(sArea));
iMaxA:=strtoint(sMaxA);

showmessage(sType+'/'+sSuburb+'/'+sBedNum+'/'+sBathNum+'/'+sParkNum+'/'+sPool+'/'+sPF+'/'+inttostr(iMINP)+'-'+inttostr(iMaxP)+'/'+inttostr(iMINA)+'-'+inttostr(iMaxA));

DMtblsuburbs.tblSuburbs.First;
while not dMtblsuburbs.tblSuburbs.eof do
 begin
  dmtbllistings.tblListings.First;
  while not dmtbllistings.tblListings.eof do
  begin
     sListingId:=dmtbllistings.tblListings['Listingid'];
    sDSuburb:=DMtblsuburbs.tblSuburbs['Suburbname'];
     sDBedNum:=dmtbllistings.tblListings['Bedroom Number'];
     sDBathNum:=dmtbllistings.tblListings['Bathroom Number'];
     sDParkNum:=dmtbllistings.tblListings['Parking Number'];
     iDType:=dmtbllistings.tblListings['Typeid'];
     IsDPool:=dmtbllistings.tblListings['Pool'];
     IsDPF:=dmtbllistings.tblListings['Pets'];
     iDPrice:=dmtbllistings.tblListings['Price'];
     iDArea:=dmtbllistings.tblListings['Area Size(m3)'];
   if (dmtbllistings.tblListings['Suburbid']=DMtblsuburbs.tblSuburbs['Suburbid']) and (iType=iDType)and((iDPrice>iMinP)and(iDPrice<iMaxP)) and ((iDArea>iMinA)and(iDArea<iMaxA)) and ((sDSuburb=sSuburb)or(sSuburb='*')) and ((sDBedNum=sBedNum) or(sBedNum='*')) and ((sDBathNum=sBathNum)or(sBathNum='*')) and ((sDParkNum= sParkNum)or( sParkNum='*')) and (IsDPool= IsPool) and (IsDPF= IsPF)then
    begin
      DMtblAgencies.adotblAgencies.First;
      while not  DMtblAgencies.adotblAgencies.eof do
       begin
        sAgency:=DMtblAgencies.adotblAgencies['AgencyName'];
        if (dmtbllistings.tblListings['Agencyid']=DMtblAgencies.adotblAgencies['Agencyid']) then
         begin
  LListingId.Add(dmtbllistings.tblListings['Listingid']);
  LSuburb.Add(DMtblsuburbs.tblSuburbs['Suburbname']);
  LBedNum.Add(dmtbllistings.tblListings['Bedroom Number']);
  LBathNum.Add(dmtbllistings.tblListings['Bathroom Number']);
  LParkNum.Add(dmtbllistings.tblListings['Parking Number']);
  LPrice.Add(dmtbllistings.tblListings['Price']);
  LArea.Add(dmtbllistings.tblListings['Area Size(m3)']);
  LAgencyName.Add(DMtblAgencies.adotblAgencies['AgencyName']);
  LWebsite.Add(DMtblAgencies.adotblAgencies['Website']);
  LContactNumber.Add(DMtblAgencies.adotblAgencies['ContactNumber']);
  LEmailAddress.Add(DMtblAgencies.adotblAgencies['EmailAddress']);
    inc(count)

         end;
         DMtblAgencies.adotblAgencies.Next;
        end;
      found:=true;
    end;
    dmtbllistings.tblListings.next;
   end;
    DMtblsuburbs.tblSuburbs.Next;
end;


 if found=false then
 begin
 Button1.Enabled:=false;
 Button1.Visible:=false;
 Memo1.Enabled:=false;
 Memo1.Visible:=false;
  Panel2.Visible:=false;
 end
 else
    Panel1.Caption:='';


  for i := 0 to LListingId.Count-1 do
   begin
memo1.lines.Add(LListingId[i]);
memo1.lines.Add(LSuburb[i]);
memo1.lines.Add('R'+LPrice[i]);
memo1.lines.Add(LAgencyName[i]);
memo1.lines.Add(LEmailAddress[i]);

  end;
count:=count-1;




end;

end.
